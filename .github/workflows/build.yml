name: SonarCloud
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
   inputs:
      input:
        description: "Execute CI/CD"
        required: false
        default: "Execute CI/CD manually"

env:
  PROJECT_PATH: ./src/Log.API/Log.API.csproj

jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET 7
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x
   
      - name: Restore Dependencies
        run: dotnet restore ${{ env.PROJECT_PATH }}
        
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
          
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
          
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUBAPI_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"caiquefirefox_LogApi" /o:"caiquefirefox" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build ./src/Log.API/Log.API.csproj --no-restore -c Release -o out
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
